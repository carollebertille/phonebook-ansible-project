---
- name: create project directory
  file:
    path: "{{ home }}/phonebook-project"
    state: directory
  tags:
    - build
    - preprod
    - prod

- name: load the source code in github
  git:
    repo: "{{ repo_phonebook  }}"
    dest: "{{ home }}/phonebook-project"
    accept_hostkey: yes
    force: yes
    recursive: no
    key_file: "{{ home }}/.ssh/id_rsa"
    version: "{{ source_branch }}"
  tags:
    - build
    - preprod
    - prod
    
- name: Log into DockerHub
  docker_login:
    username: "{{ dockerhub_login_vault }}"
    password: "{{ dockerhub_pwd_vault }}"
  tags:
    - build
    - preprod
    - prod

- name: Create a global network of our two containers
  docker_network:
    name: phonebook_network
  tags:
    - preprod
    - prod

- block:
  - name: Build phonebook-mysql
    docker_image:
      build:
        path: "{{ home }}/phonebook-project"
        dockerfile: Dockerfile-mysql
      name: "{{ username }}/phonebook-mysql"
      state: present
      source: build
      tag: "{{ image_tag }}"

  - name: Build phonebook-app
    docker_image:
      build:
        path: "{{ home }}/phonebook-project"
        dockerfile: Dockerfile-app
      name: "{{ username }}/phonebook-app"
      state: present
      source: build
      tag: "{{ image_tag }}"
  tags:
    - build

- block:
  - name: push phonebook-mysql
    docker_image:
      build:
        path: "{{ home }}/phonebook-project"
        dockerfile: Dockerfile-mysql
      name: "{{ username }}/phonebook-mysql"
      state: present
      source: build
      push: yes
      tag: "{{ image_tag }}"

  - name: push phonebook-app
    docker_image:
      build:
        path: "{{ home }}/phonebook-project"
        dockerfile: Dockerfile-app
      name: "{{ username }}/phonebook-app"
      state: present
      source: build
      push: yes
      tag: "{{ image_tag }}"
  tags:
    - push


- block:
  - name: pull image of phonebook-mysql
    docker_image:
      name: "{{ username }}/phonebook-mysql:{{ image_tag }}"
      source: pull

  - name: pull image of phonebook-app
    docker_image:
      name: "{{ username }}/phonebook-app:{{ image_tag }}"
      source: pull
  tags:
    - prod


- block:
  - name: container phonebook mysql
    docker_container:
      name: phonebook-mysql
      image: "{{ username }}/phonebook-mysql:{{ image_tag }}"
      state: started
      restart: yes
      networks:
        - name: phonebook_network

  - name: sleep for 20 seconds and continue with play
    wait_for:
      timeout: 20

  - name: container phonebook app
    docker_container:
      name: phonebook-app
      image: "{{ username }}/phonebook-app:{{ image_tag }}"
      state: started
      ports:
        - "8181:8181"
      restart: yes
      networks:
        - name: phonebook_network
  tags:
    - preprod
    - prod

- name: Check that you can connect (GET) to a page and it returns a status 200
  uri:
    url: "http://{{ ip_addr_preprod }}:{{ port_app }}"
  tags:
    - test
